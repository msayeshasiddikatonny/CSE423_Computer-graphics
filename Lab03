/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
 
import com.jogamp.opengl.GL2;
import com.jogamp.opengl.GLAutoDrawable;
import com.jogamp.opengl.GLCapabilities;
import com.jogamp.opengl.GLEventListener;
import com.jogamp.opengl.GLProfile;
import com.jogamp.opengl.awt.GLCanvas;
import javax.swing.JFrame;

/**
 *
 * @author User
 */
public class Ayesha_Siddika_Tonny_18301197_Assignment03 implements GLEventListener {
    static GLProfile profile = GLProfile.get(GLProfile.GL2);
    static GLCapabilities capabilities = new GLCapabilities(profile);
    // The canvas 
    static GLCanvas glcanvas = new GLCanvas(capabilities);
    
   public static void main(String[] args) {
	      //getting the capabilities object of GL2 profile
	   	  
	      
	      Ayesha_Siddika_Tonny_18301197_Assignment03 l = new Ayesha_Siddika_Tonny_18301197_Assignment03();
	      //creating frame
	      glcanvas.addGLEventListener(l);
	      glcanvas.setSize(600, 400);
	      
	      final JFrame frame = new JFrame (" Midpoint Line");
	      //adding canvas to frameaight 
	      frame.getContentPane().add(glcanvas);
	      frame.setSize(frame.getContentPane().getPreferredSize());
	      frame.setVisible(true);
	      
	   }
   public void display(GLAutoDrawable drawable) {
      final GL2 gl = drawable.getGL().getGL2();
          gl.glPointSize(5);
          gl.glColor3d(0.5,0.9,0.8);
       	  gl.glBegin (GL2.GL_POINTS);//static field
          
           //DDA(gl,0,0,0.5,0.4);
            
           midpointLine(gl,-0.5,0.4,-0.3,0.4);
           midpointLine(gl,-0.5,0.2,-0.3,0.2);
           midpointLine(gl,-0.2,0.4,0,0.4);
           midpointLine(gl,-0.2,0 ,0,0.4);
           midpointLine(gl,-0.5,0.2,-0.5,0.4);
           midpointLine(gl,-0.3,0 ,-0.3,0.4);
           
            
                               
          gl.glEnd();
       
      
   }
   public void  midpointLine(GL2 gl,double x1,double y1,double x2,double y2){
        double  dx,dy,incrE,incrNE,d,x,y;
        x=x1;y=y1;
        int zone=findzone(x1,y1,x2,y2);
        double [] zone0=convertZone(x1,y1,zone);
        x1=zone0[0];
        y1=zone0[1];
        zone0=convertZone(x2,y2,zone);
        x2=zone0[0];
        y2=zone0[1];
        dx=x2-x1;
        dy=y2-y1;
        d=2*dy-dx;
        incrE=2*dy;
        incrNE=2*(dy-dx);
          x=x1;y=y1;
          //gl.glVertex2d(x,y); 
         while (x<x2){
             if ( d<=0){
                 d=d+incrE;
                 x=x+0.001;
             }
         
             else{
                 d=d+incrNE;
                 x=x+0.001;
                 y=y+ 0.001;
                  
                 
             }
             double [] originalPoint=convertOrginal(x,y,zone);
             double orX=originalPoint[0];
             double orY=originalPoint[1];
             System.out.println("x= "+orX);
             System.out.println("y= "+orY);
             gl.glVertex2d(orX,orY);
            //gl.glVertex2d(x,y);
         }
   }
   public int findzone(double x1,double y1,double x2,double y2){
       int zone=-1;
       double dx=x2-x1;
       double dy=y2-y1;
       if (Math.abs(dx)>Math.abs(dy)){
           if (dx>=0 && dy>=0){
               zone =0;//00000000
           }
           
           if (dy>=0 &&dx<0){
               zone=3;//333333
            }
           if (dy<0 &&dx<0){
               zone=4;// 44444
            }
           if (dx>=0 &&dy<0){
               zone=7;//77777
            }
       }
       else{
           if (dx>=0 && dy>=0){
               zone =1;//11111111
           }
         
            if (dy>=0 &&dx<0){
             zone=2;//22222
             }
           if (dy<0 &&dx<0){
             zone=5;//55555
             }
           if (dy<0 &&dx>=0){
             zone=6;//66666
             }
       }
      return zone;  
   }
   public void dispose(GLAutoDrawable arg0) {
      //method body
   }
   public double [] convertZone(double x,double y,int zone){
       double [] result =new double[2];
       if (zone==0){
           result[0]=x;
           result[1]=y;
       }
       if (zone==1){
           result[0]=y;
           result[1]=x;
       }
       if (zone==2){
           result[0]=-y;
           result[1]=x;
       }
       if (zone==3){
           result[0]=-x;
           result[1]=y;
       }
       if (zone==4){
           result[0]=-x;
           result[1]=-y;
       }
       if (zone==5){
           result[0]=-y;
           result[1]=-x;
       }
       if (zone==6){
           result[0]=y;
           result[1]=-x;
       }
       if (zone==7){
           result[0]=x;
           result[1]=-y;
       }
       return result;
   }
   public double [] convertOrginal(double x,double y,int zone){
       double [] result =new double[2];
       if (zone==0){
           result[0]=x;
           result[1]=y;
       }
       if (zone==1){
           result[0]=y;
           result[1]=x;
       }
       if (zone==2){
           result[0]=-y;
           result[1]=x;
       }
       if (zone==3){
           result[0]=-x;
           result[1]=y;
       }
       if (zone==4){
           result[0]=-x;
           result[1]=-y;
       }
       if (zone==5){
           result[0]=-y;
           result[1]=-x;
       }
       if (zone==6){
           result[0]=y;
           result[1]=-x;
       }
       if (zone==7){
           result[0]=x;
           result[1]=-y;
       }
       return result;
   }
   public void init(GLAutoDrawable drawable) {
      // method body
	   //4. drive the display() in a loop
	    }
   
   public void reshape(GLAutoDrawable arg0, int arg1, int arg2, int arg3, int arg4) {
      // method body
   }
}

